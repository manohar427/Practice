package com.exe;

public class ExecutorCachedPoolDemo {

}


import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class ExecutorFixedPoolDemo {

	public static void main(String[] args) {
		ExecutorService fes = Executors.newFixedThreadPool(2);

		ThreadF t = new ThreadF();
		for (int i = 0; i < 20; i++) {
			t.setI(i);
			fes.execute(t);
		}

		fes.shutdown();
		while (!fes.isTerminated()) {
			try {
				Thread.sleep(500);
				int x = 111/0;
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
			System.out.println("Not terminated");
		}
	}
}

class ThreadF implements Runnable {
	int i=0;
	
	
	public int getI() {
		return i;
	}


	public void setI(int i) {
		this.i = i;
	}


	public void run() {
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		System.out.println(Thread.currentThread().getName() + ":"+i);
	}
}
